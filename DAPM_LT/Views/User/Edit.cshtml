

@model DAPM_LT.Models.TaiKhoan

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link rel="stylesheet" type="text/css" href="~/Content/css/profile.css">
}

<body style="margin-top:100px">
    <a href="@Url.Action("Profile", new { id = Model.Idtaikhoan })" class="btn btn-success" style="color: white;">Trở về</a>
    <h2 class="text-center">Chỉnh sửa thông tin</h2>


    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="profile-container">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Idtaikhoan)
            @Html.HiddenFor(model => model.IDQuyen)
            @Html.HiddenFor(model => model.Matkhau)

            <!--Chọn ảnh-->
            <div class="profile-left">
                <div class="profile-picture-container">

                    @if (Model.ImgU != null)
                    {
                        <!-- Hiển thị ảnh từ cột ImgU nếu nó không trống và có ảnh từ cơ sở dữ liệu -->
                        <img id="imgPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.ImgU)" alt="User Image" />
                    }

                </div>
                <div class="profile-actions">
                    <label for="ImageFile" class="btn btn-default">Chọn ảnh</label>
                    <input type="file" name="ImageFile" id="ImageFile" accept="image/*" style="display:none;" onchange="displayImagePreview(this)" />
                    <span id="selectedFileName"></span>
                </div>
                <script>
                    function displayImagePreview(input) {
                        var fileName = input.files[0].name;
                        document.getElementById("selectedFileName").innerHTML = fileName;

                        var reader = new FileReader();
                        reader.onload = function (e) {
                            var imgPreview = document.getElementById("imgPreview");
                            imgPreview.src = e.target.result;
                            imgPreview.style.display = "block";
                        };
                        reader.readAsDataURL(input.files[0]);
                    }
                </script>
            </div>


            <div class="profile-right">
                <div class="profile-info">
                    <div class="profile-field">
                        <span class="profile-label">Mã tài khoản:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Họ:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Tên:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Email:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Điện thoại:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Loại tài khoản:</span>

                    </div>
                    <div class="profile-field">
                        <span class="profile-label">Địa chỉ:</span>

                    </div>
                </div>
            </div>
            <div class="profile-right">
                <div class="profile-info">

                    <div class="profile-field">
                        <span class="profile-value" style="color:red">@Model.Idtaikhoan</span>
                    </div>
                    <div class="profile-field">

                        @Html.EditorFor(model => model.Holot, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Holot, "", new { @class = "text-danger" })
                    </div>

                    <div class="profile-field">
                        @Html.EditorFor(model => model.Ten, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ten, "", new { @class = "text-danger" })
                    </div>


                    <div class="profile-field">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>


                    <div class="profile-field">
                        @Html.EditorFor(model => model.Dienthoai, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Dienthoai, "", new { @class = "text-danger" })
                    </div>

                    <div class="profile-field">
                        @Html.EditorFor(model => model.Diachi, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Diachi, "", new { @class = "text-danger" })
                    </div>

                </div>


            </div>
        </div>

        <div class="form-group pull-right">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu thông tin" class="btn btn-success" />
            </div>
        </div>
    }

</body>

